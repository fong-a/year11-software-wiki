---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import OOPNav from '../../../components/OOPNav';
import Tooltip from '../../../components/Tooltip';
import '../../../styles/global.css';
---

<BaseLayout title="Encapsulation - Object-Oriented Programming" description="Understanding encapsulation, data hiding, and access control in object-oriented programming">
  <!-- Breadcrumb Bar -->
  <div class="bg-gray-50 border-b border-gray-200 py-3">
    <div class="container mx-auto px-6">
      <nav>
        <a href="/" class="text-sm text-gray-600 hover:text-blue-900 transition-colors">Home</a>
        <span class="text-sm text-gray-400 mx-2">></span>
        <a href="/topics/object-oriented-programming" class="text-sm text-gray-600 hover:text-blue-900 transition-colors">Object-Oriented Programming</a>
        <span class="text-sm text-gray-400 mx-2">></span>
        <span class="text-sm text-blue-900 font-medium">Encapsulation</span>
      </nav>
    </div>
  </div>

  <div class="min-h-screen bg-gray-50 py-8">
    <div class="container mx-auto px-6">
      <div class="grid lg:grid-cols-4 gap-8">
        <!-- Navigation Sidebar -->
        <div class="lg:col-span-1">
          <div class="sticky top-8 bg-white rounded-lg shadow-sm p-6 max-h-[calc(100vh-6rem)] overflow-y-auto">
            <OOPNav 
              client:load 
              currentPage="/topics/object-oriented-programming/encapsulation"
            />
          </div>
        </div>

        <!-- Main Content -->
        <div class="lg:col-span-3">
          <div class="bg-white rounded-lg shadow-sm p-8">
            <h1 class="text-4xl font-bold mb-6">Encapsulation</h1>
            
            <div class="mb-8 p-6 bg-gradient-to-r from-green-50 to-blue-50 rounded-xl border border-green-200">
              <h2 class="text-2xl font-bold text-gray-900 mb-4">What is Encapsulation?</h2>
              <p class="text-gray-800 text-lg leading-relaxed">
                <strong>Encapsulation</strong> is like putting your data in a protective capsule. It bundles data (attributes) and methods together while controlling who can access what.
              </p>
            </div>

            <!-- Core Concepts -->
            <div class="mb-8">
              <h2 class="text-2xl font-semibold mb-6 text-gray-900">Core Encapsulation Concepts</h2>
              
              <!-- Data Hiding -->
              <div class="mb-6 bg-blue-50 p-6 rounded-lg border border-blue-200">
                <h3 class="text-xl font-semibold text-blue-800 mb-4">1. Data Hiding</h3>
                <p class="text-blue-700 mb-4">Keep internal data private and provide controlled access through methods.</p>
                
                <div class="bg-white p-4 rounded border border-blue-300">
                  <h4 class="font-medium text-blue-700 mb-2">Python Example:</h4>
                  <pre class="text-sm font-mono bg-gray-100 text-gray-800 p-3 rounded border-l-4 border-blue-400"><code>class BankAccount:
    def __init__(self, account_number, initial_balance):
        self.account_number = account_number
        self._balance = initial_balance  # Private attribute
        self._transaction_count = 0      # Private counter
    
    def deposit(self, amount):
        """Public method to safely modify private data"""
        if amount > 0:
            self._balance += amount
            self._transaction_count += 1
            return True
        return False
    
    def get_balance(self):
        """Public method to safely access private data"""
        return self._balance
    
    def get_transaction_count(self):
        """Controlled access to private data"""
        return self._transaction_count

# Usage - only access through public methods
account = BankAccount("ACC123", 1000)
account.deposit(500)  # Safe way to modify balance
balance = account.get_balance()
print("Balance: " + str(balance))  # Safe access

# Direct access not recommended
# print(account._balance)  # Works but breaks encapsulation</code></pre>
                </div>
              </div>
            </div>

            <!-- Practice Questions -->
            <div class="mb-8">
              <h2 class="text-2xl font-semibold mb-6 text-gray-900">Practice Questions</h2>
              
              <div class="space-y-6">
                <!-- Question 1 -->
                <div class="bg-white p-6 rounded-lg border-l-4 border-purple-500 shadow-sm">
                  <h3 class="font-semibold text-gray-900 mb-3">Question 1 (5 marks)</h3>
                  <p class="text-gray-700 mb-4"><strong>Identify</strong> three encapsulation violations in this code and <strong>suggest</strong> how to fix them:</p>
                  
                  <div class="bg-gray-50 p-4 rounded-lg mb-4">
                    <pre class="text-sm font-mono"><code>class Account:
    def __init__(self, pin):
        self.balance = 0
        self.pin = pin
        self.transactions = []

account = Account(1234)
account.balance = -500  # Problem 1
print(account.pin)      # Problem 2  
account.transactions.clear()  # Problem 3</code></pre>
                  </div>
                  
                  <details class="mt-4">
                    <summary class="cursor-pointer text-purple-600 hover:text-purple-800 font-medium">Show Answer</summary>
                    <div class="mt-3 p-4 bg-gray-50 rounded">
                      <p class="text-sm mb-2"><strong>Problem 1 (2 marks):</strong> Direct balance modification allows invalid negative values. Fix: Use deposit/withdraw methods with validation.</p>
                      <p class="text-sm mb-2"><strong>Problem 2 (2 marks):</strong> Direct access to sensitive PIN data. Fix: Make PIN private and provide authentication method instead.</p>
                      <p class="text-sm"><strong>Problem 3 (1 mark):</strong> Direct access to internal transaction log. Fix: Provide controlled access through getter method.</p>
                    </div>
                  </details>
                </div>
              </div>
            </div>

            <!-- NESA Exam Context -->
            <div class="bg-amber-50 p-4 rounded-lg border border-amber-200">
              <div class="flex items-start">
                <svg class="w-5 h-5 text-amber-600 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <div>
                  <p class="font-semibold text-amber-900 mb-1">NESA Exam Focus</p>
                  <p class="text-amber-800 text-sm">Encapsulation is a key OOP concept in Year 11 curricula. Focus on understanding data hiding, access control, and the benefits of controlled access. Be able to identify encapsulation violations and suggest appropriate fixes using private attributes and public methods.</p>
                </div>
              </div>
            </div>
            
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>